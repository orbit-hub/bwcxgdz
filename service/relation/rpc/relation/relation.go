// Code generated by goctl. DO NOT EDIT!
// Source: relation.proto

package relation

import (
	"context"

	"bwcxgdz/dousheng/service/relation/rpc/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionResponse        = proto.ActionResponse
	IdRequest             = proto.IdRequest
	RelationActionRequest = proto.RelationActionRequest
	UserIdListResponse    = proto.UserIdListResponse

	Relation interface {
		RelationAction(ctx context.Context, in *RelationActionRequest, opts ...grpc.CallOption) (*ActionResponse, error)
		GetFollowList(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*UserIdListResponse, error)
		GetFollowerList(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*UserIdListResponse, error)
	}

	defaultRelation struct {
		cli zrpc.Client
	}
)

func NewRelation(cli zrpc.Client) Relation {
	return &defaultRelation{
		cli: cli,
	}
}

func (m *defaultRelation) RelationAction(ctx context.Context, in *RelationActionRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	client := proto.NewRelationClient(m.cli.Conn())
	return client.RelationAction(ctx, in, opts...)
}

func (m *defaultRelation) GetFollowList(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*UserIdListResponse, error) {
	client := proto.NewRelationClient(m.cli.Conn())
	return client.GetFollowList(ctx, in, opts...)
}

func (m *defaultRelation) GetFollowerList(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*UserIdListResponse, error) {
	client := proto.NewRelationClient(m.cli.Conn())
	return client.GetFollowerList(ctx, in, opts...)
}
