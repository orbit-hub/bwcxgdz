// Code generated by goctl. DO NOT EDIT!
// Source: comment.proto

package comment

import (
	"context"

	"bwcxgdz/dousheng/service/comment/rpc/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionRequest       = proto.ActionRequest
	ActionResponse      = proto.ActionResponse
	CommentInfoResponse = proto.CommentInfoResponse
	CommentListResponse = proto.CommentListResponse
	VideoIdRequest      = proto.VideoIdRequest

	Comment interface {
		GetCommentListById(ctx context.Context, in *VideoIdRequest, opts ...grpc.CallOption) (*CommentListResponse, error)
		CommentAction(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error)
	}

	defaultComment struct {
		cli zrpc.Client
	}
)

func NewComment(cli zrpc.Client) Comment {
	return &defaultComment{
		cli: cli,
	}
}

func (m *defaultComment) GetCommentListById(ctx context.Context, in *VideoIdRequest, opts ...grpc.CallOption) (*CommentListResponse, error) {
	client := proto.NewCommentClient(m.cli.Conn())
	return client.GetCommentListById(ctx, in, opts...)
}

func (m *defaultComment) CommentAction(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	client := proto.NewCommentClient(m.cli.Conn())
	return client.CommentAction(ctx, in, opts...)
}
